<?xml version="1.0" encoding="UTF-8"?>
<!-- 30초마다 설정 파일의 변경을 확인한다. 파일이 변경되면 다시 로딩한다 -->
<configuration scan="true" scanPeriod="30 seconds">
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<withJansi>false</withJansi>
		<encoder>
			<pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%X{X-B3-TraceId:-},${HOSTNAME}] [%thread] [%level] %logger{36}@%method:%line - %msg%n</pattern>
		</encoder>
	</appender>

	<!-- Spring -->
	<logger name="org.springframework" level="error"/>

	<!-- Swagger -->
	<logger name="springfox.documentation.spring.web.plugins" level="WARN"/>
	<logger name="springfox.documentation.spring.web.scanners" level="WARN"/>

	<!-- Netflix -->
	<logger name="com.netflix" level="WARN"/>

	<!-- Network Module(Discovery Log) -->
	<logger name="org.apache.http" level="INFO"/>

	<!-- hibernate -->
	<logger name="org.hibernate.SQL" level="INFO"/>

	<!-- JDBC -->
	<logger name="jdbc" level="OFF"/> <!-- OFF, 모든 JDBC 로그 -->
	<logger name="jdbc.sqlonly" level="OFF"/> <!-- OFF, 실행된 쿼리 -->
	<logger name="jdbc.sqltiming" level="INFO"/> <!-- INFO, 실행된 쿼리와 실행 시간 -->
	<logger name="jdbc.audit" level="INFO"/> <!-- INFO(개발환경) / OFF(운영환경), ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성됨 -->
	<logger name="jdbc.resultset" level="OFF"/> <!-- OFF, 테이블 조회 결과와 모델 맵핑 결과 -->
	<logger name="jdbc.resultsettable" level="INFO"/> <!-- INFO, 테이블 조회 결과 -->
	<logger name="jdbc.connection" level="INFO"/> <!-- INFO, 커넥션 정보 -->

	<root level="info">
		<appender-ref ref="CONSOLE"/>
	</root>
</configuration>
